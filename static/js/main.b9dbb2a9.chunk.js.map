{"version":3,"sources":["Components/Song.js","Components/Player.js","data.js","Components/LibrarySong.js","Components/Library.js","Components/Nav.js","App.js","reportWebVitals.js","index.js"],"names":["Song","currentSong","isPlaying","className","alt","name","src","cover","artist","Player","setCurrentSong","setIsPlaying","audioRef","songInfo","setSongInfo","songs","setSongs","getTime","time","Math","floor","slice","skipHandler","direction","a","currentIndex","findIndex","song","id","length","current","play","useEffect","newSongs","map","s","active","trackAnim","transform","animationPercentage","currentTime","style","background","color","min","max","duration","value","type","onChange","e","target","onClick","icon","faAngleLeft","size","pause","faPause","faPlay","faAngleRight","chillHop","uuidv4","audio","LibrarySong","setLibraryStatus","songSelectHandler","Library","libraryStatus","Nav","faMusic","App","useState","data","useRef","timeUpdateHandler","roundedCurrent","round","roundedDuration","animation","endSongHandler","audioref","onTimeUpdate","ref","onLoadedMetadata","onEnded","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b9dbb2a9.chunk.js","sourcesContent":["import React from 'react';\n\nconst Song = ({currentSong,isPlaying}) => {\n  return (\n    <div className=\"song-container\">\n      <img className={`${isPlaying?\"play-active\":\"\"}`} alt={currentSong.name} src={currentSong.cover}></img>\n      <h2>{currentSong.name}</h2>\n      <h3>{currentSong.artist}</h3>\n    </div>\n  );\n};\n\nexport default Song;\n","import React,{useEffect} from 'react';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlay, faAngleLeft , faAngleRight , faPause} from \"@fortawesome/free-solid-svg-icons\";\n\nconst Player = ({setCurrentSong,currentSong,isPlaying,setIsPlaying,audioRef,songInfo,setSongInfo,songs,setSongs}) => {\n  //event handler\n  const playSongHandler = () => {\n    if (isPlaying) {\n      audioRef.current.pause();\n      setIsPlaying(false);\n    } else {\n      audioRef.current.play();\n      setIsPlaying(true);\n    }\n  };\n\n  //state\n\n  const getTime = (time) => {\n    return (\n      Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\n    );\n  };\n\n  const dragHandler = (e) => {\n    setSongInfo({ ...songInfo, currentTime: e.target.value });\n    audioRef.current.currentTime = e.target.value;\n  };\n\n  const skipHandler = async (direction) => {\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n    if(direction === \"skip-back\"){\n      if(currentIndex === 0){\n        await setCurrentSong(songs[songs.length-1]);\n      }else{\n      await setCurrentSong(songs[currentIndex - 1]);\n      }\n    }else{\n      await setCurrentSong(songs[(currentIndex+1)%songs.length]);\n    }\n    audioRef.current.play();\n    setIsPlaying(true);\n  };\n\n  useEffect(() => {\n    const newSongs = songs.map((s) => {\n      if (s.id === currentSong.id) {\n        return {\n          ...s,\n          active: true,\n        };\n      } else {\n        return {\n          ...s,\n          active: false,\n        };\n      }\n    });\n    setSongs(newSongs);\n  },[currentSong]);\n  const trackAnim = {\n    transform : `translateX(${songInfo.animationPercentage}%)`\n  };\n  return (\n    <div className=\"player\">\n      <div className=\"time-control\">\n        <p>{getTime(songInfo.currentTime)}</p>\n        <div style={{background:`linear-gradient(to right,${currentSong.color[0]},${currentSong.color[1]})`}}className=\"track\">\n          <input\n            min={0}\n            max={songInfo.duration || 0}\n            value={songInfo.currentTime}\n            type=\"range\"\n            onChange={dragHandler}\n          />\n          <div style={trackAnim} className=\"animate-track\"></div>\n        </div>\n        <p> {songInfo.duration ? getTime(songInfo.duration) : \"0:00\"} </p>\n      </div>\n      <div className=\"play-control\">\n        <FontAwesomeIcon\n          onClick={() => {\n            skipHandler(\"skip-back\");\n          }}\n          className=\"skip-back\"\n          icon={faAngleLeft}\n          size=\"2x\"\n        />\n        <FontAwesomeIcon\n          onClick={playSongHandler}\n          className=\"play\"\n          icon={isPlaying ? faPause : faPlay}\n          size=\"2x\"\n        />\n        <FontAwesomeIcon\n          onClick={() => {\n            skipHandler(\"skip-forward\");\n          }}\n          className=\"skip-forward\"\n          icon={faAngleRight}\n          size=\"2x\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Player;\n","import {v4 as uuidv4} from \"uuid\";\n\nfunction chillHop(){\n  return [\n    {\n      name: \"travelbag\",\n      artist: \"Sleepy Fish, mommy\",\n      color: [\"#5C8CCE\", \"#9bc7e4\"],\n      id: uuidv4(),\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=19058\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2021/05/1245c0271290a3196328c0cf4aaa910cd873dfe7-1024x1024.jpg\",\n      active: true,\n    },\n    {\n      name: \"Higher\",\n      artist: \"Misha, Jussi Halme\",\n      color: [\"#BC7873\", \"#A89FB2\"],\n      id: uuidv4(),\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=15088\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2021/05/2473c60e471fe9b40e246bf7711c87d3d6ea69a7-1024x1024.jpg\",\n      active: false,\n    },\n    {\n      name: \"Roses n Flames\",\n      artist: \"C Y G N\",\n      color: [\"#DE8FDC\", \"#7192CF\"],\n      id: uuidv4(),\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=14985\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2021/02/d12927eedcc2f5afba2ab049a4a1ea46c2266ae3-1024x1024.jpg\",\n      active: false,\n    },\n    {\n      name: \"Cascade\",\n      artist: \"Knowmadic\",\n      color: [\"#FD9554\", \"#7ACCA3\"],\n      id: uuidv4(),\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=13092\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2021/02/70a56749b8b89815fa75446030c6ba57d2c34de7-1024x1024.jpg\",\n      active: false,\n    },\n    {\n      name: \"Flashback\",\n      artist: \"Blue Wednesday, Shopan\",\n      color: [\"#6F5275\", \"#B2A8DC\"],\n      id: uuidv4(),\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=11225\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/12/33a2a875828118a3ff260638a88362936104879a-1024x1024.jpg\",\n      active: false,\n    },\n  ];\n}\nexport default chillHop;","import React from \"react\";\n\nconst LibrarySong = ({\n  songs,\n  song,\n  setCurrentSong,\n  audioRef,\n  setIsPlaying,\n  setSongs,\n  setLibraryStatus,\n}) => {\n  const songSelectHandler = async () => {\n    //set the song as currently playing\n    await setCurrentSong(song);\n    setLibraryStatus(false);\n\n    //actually playing that song\n    audioRef.current.play();\n\n    //highlight the selected song in the library\n    const newSongs = songs.map((s) => {\n      if (s.id === song.id) {\n        return {\n          ...s,\n          active: true,\n        };\n      } else {\n        return {\n          ...s,\n          active: false,\n        };\n      }\n    });\n    setSongs(newSongs);\n    setIsPlaying(true);\n  };\n  return (\n    <div\n      onClick={songSelectHandler}\n      className={`library-song ${song.active ? \"selected\" : \"\"}`}\n    >\n      <img alt={song.name} src={song.cover}></img>\n      <div className=\"song-description\">\n        <h3>{song.name}</h3>\n        <h4>{song.artist}</h4>\n      </div>\n    </div>\n  );\n};\n\nexport default LibrarySong; ","import React from \"react\";\n\nimport LibrarySong from \"./LibrarySong\";\n\nconst Library = ({\n  songs,\n  setCurrentSong,\n  audioRef,\n  setIsPlaying,\n  setSongs,\n  libraryStatus,\n  setLibraryStatus,\n}) => {\n  return (\n    <div className={`library ${libraryStatus?\"active-library\":\"\"}`}>\n      <h2>Library</h2>\n      <div className=\"library-songs\">\n        {songs.map((song) => (\n          <LibrarySong\n            setCurrentSong={setCurrentSong}\n            songs={songs}\n            song={song}\n            audioRef={audioRef}\n            key={song.id}\n            setIsPlaying={setIsPlaying}\n            setSongs={setSongs}\n            setLibraryStatus={setLibraryStatus}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Library;","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faMusic } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Nav = ({setLibraryStatus,libraryStatus}) => {\n  return (\n    <nav>\n      <h1>Wxld</h1>\n      <button onClick={() => {\n        if(libraryStatus){\n          setLibraryStatus(false);\n          \n        }else{\n          setLibraryStatus(true);\n        }\n      }}>\n        Library\n        <FontAwesomeIcon icon={faMusic}/>\n      </button>\n    </nav>\n  );\n};\n\nexport default Nav;","import React, { useState, useRef } from \"react\";\n//importing styles\nimport \"./styles/App.scss\";\n\n//importing components\nimport Song from \"./Components/Song\";\nimport Player from './Components/Player';\nimport data from \"./data\";\nimport Library from './Components/Library';\nimport Nav from \"./Components/Nav\";\n\nfunction App() {\n  //states\n  const [libraryStatus,setLibraryStatus] = useState(false);\n  const [isPlaying,setIsPlaying] = useState(false);\n  const [songs,setSongs] = useState(data());\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  const [songInfo, setSongInfo] = useState({\n    currentTime: 0,\n    duration: 0,\n    animationPercentage:0,\n  });\n\n  const audioRef = useRef(null);\n\n  const timeUpdateHandler = (e) => {\n    const current = e.target.currentTime;\n    const duration = e.target.duration;\n    const roundedCurrent = Math.round(current);\n    const roundedDuration = Math.round(duration);\n    const animation = Math.round((roundedCurrent/roundedDuration)*100);\n    setSongInfo({ ...songInfo, currentTime: current, duration,animationPercentage:animation });\n  };\n\n  const endSongHandler = async () => {\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n    await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n    audioRef.current.play();\n  };\n\n  return (\n    <div className={`App ${libraryStatus? \"library-active\":\"\"}`}>\n      <Nav setLibraryStatus={setLibraryStatus} libraryStatus={libraryStatus} />\n      <Song currentSong={currentSong} isPlaying={isPlaying} />\n      <Player\n        isPlaying={isPlaying}\n        setIsPlaying={setIsPlaying}\n        currentSong={currentSong}\n        audioRef={audioRef}\n        songInfo={songInfo}\n        setSongInfo={setSongInfo}\n        songs={songs}\n        setCurrentSong={setCurrentSong}\n        setSongs={setSongs}\n      />\n      <Library\n        audioref={audioRef}\n        songs={songs}\n        setCurrentSong={setCurrentSong}\n        audioRef={audioRef}\n        setIsPlaying={setIsPlaying}\n        setSongs={setSongs}\n        libraryStatus={libraryStatus}\n        setLibraryStatus={setLibraryStatus}\n      />\n      <audio\n        onTimeUpdate={timeUpdateHandler}\n        ref={audioRef}\n        src={currentSong.audio}\n        onLoadedMetadata={timeUpdateHandler}\n        onEnded={endSongHandler}\n      ></audio>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}